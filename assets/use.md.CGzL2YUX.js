import{_ as s,c as a,o as i,a1 as e}from"./chunks/framework.DE0EzH0a.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"use.md","filePath":"use.md"}'),l={name:"use.md"},t=e(`<h2 id="引入-calculatenameworker-js" tabindex="-1">引入 <code>calculateNameWorker.js</code> <a class="header-anchor" href="#引入-calculatenameworker-js" aria-label="Permalink to &quot;引入 \`calculateNameWorker.js\`&quot;">​</a></h2><blockquote><p>以 <code>iife</code> 的方式引入公共的 js</p></blockquote><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/calculateNameWorker.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>但是上述的<code>js</code>到哪里找呢, <a href="https://gitee.com/li_haohao_1/big-file-upload_front/tree/master/public" target="_blank" rel="noreferrer">点击这里</a></p><ul><li>如果项目中不引入上述 js 的话，项目不会任何异常，但是功能<code>秒传</code>/ <code>断点续传</code>的功能就无法实现了</li><li>如果您的项目部署在某个二级文件夹下, 而不是部署到 nginx 根目录下，您可以设置如下代码(一定要在导入<code>calculateNameWorker.js</code> 之前执行)：</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(window.uploadJdk = {}).publicPath = &quot;/factory&quot;;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="导出核心方法-uploadhandler" tabindex="-1">导出核心方法 <code>uploadHandler</code> <a class="header-anchor" href="#导出核心方法-uploadhandler" aria-label="Permalink to &quot;导出核心方法 \`uploadHandler\`&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// index.vue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { uploadHandler } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;upload-file-jdk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uploadHandler.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ xxx });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一旦上传文件后，将file 给予这个方法中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xx).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">修改后的文件名称</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">原文件名称</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rs;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="使用核心的-hooks" tabindex="-1">使用核心的 hooks <a class="header-anchor" href="#使用核心的-hooks" aria-label="Permalink to &quot;使用核心的 hooks&quot;">​</a></h2><h3 id="vue-版本" tabindex="-1">Vue 版本 <a class="header-anchor" href="#vue-版本" aria-label="Permalink to &quot;Vue 版本&quot;">​</a></h3><p>将文件 <code>useBigFileUploadForVue.ts</code>(<a href="https://gitee.com/li_haohao_1/big-file-upload_front_test/tree/master/src/hooks" target="_blank" rel="noreferrer">点击这里</a>) 复制到项目的 <code>hooks</code> 中，可以直接使用</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">allProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cancelProgressHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pauseProgressHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  useBigFileUploadForVue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><ul><li><code>allProgress</code> 所有的上传文件的信息</li><li><code>cancelProgressHandler</code> 点击取消触发的事件</li><li><code>pauseProgressHandler</code> 暂停需要触发的事件</li></ul><h3 id="react-版本" tabindex="-1">React 版本 <a class="header-anchor" href="#react-版本" aria-label="Permalink to &quot;React 版本&quot;">​</a></h3><p><code>实现中</code></p><h2 id="实际案例的-demo" tabindex="-1">实际案例的 Demo <a class="header-anchor" href="#实际案例的-demo" aria-label="Permalink to &quot;实际案例的 Demo&quot;">​</a></h2><ul><li><a href="https://gitee.com/li_haohao_1/big-file-upload_front" target="_blank" rel="noreferrer">前端 demo</a></li><li>后端 demo <ul><li><a href="https://gitee.com/li_haohao_1/big-file-upload_end" target="_blank" rel="noreferrer">Java 版本</a></li><li><a href="https://gitee.com/li_haohao_1/big-file-upload_node.git" target="_blank" rel="noreferrer">Node 版本_实现中</a></li></ul></li></ul>`,17),n=[t];function h(p,r,k,o,d,c){return i(),a("div",null,n)}const u=s(l,[["render",h]]);export{E as __pageData,u as default};
